https://nados.io/question/k-subsets-with-equal-sum?zen=true

import java.io.*;
import java.util.*;

public class Main {


	public static void solution(int[] arr, int idx,int n , int k,int[] subsetSum,int ssssf, ArrayList<ArrayList<Integer>> ans) {
		//write your code here
		if(idx==n){
            boolean f=true;
			for(int i=k-1;i>0;i--){
				if(subsetSum[i]!=subsetSum[i-1]){
					f=false;
				}
			}

			if(f){
				for(ArrayList<Integer> x:ans){
					System.out.print(x+" ");
				}
				System.out.println();
			}
			return;


        }
        
        for(int j=0;j<ans.size();j++){
            if(ans.get(j).size()>0){
				ans.get(j).add(arr[idx]);
				subsetSum[j]+=arr[idx];
				solution(arr,idx+1,n,k,subsetSum,ssssf,ans);
				subsetSum[j]-=arr[idx];
				ans.get(j).remove(ans.get(j).size()-1);
			}
			if(ans.get(j).size()==0){
				ans.get(j).add(arr[idx]);
				subsetSum[j]+=arr[idx];
				solution(arr,idx+1,n,k,subsetSum,ssssf+1,ans);
				subsetSum[j]-=arr[idx];
				ans.get(j).remove(ans.get(j).size()-1);
                
				break;
			}
        }
        
    }
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int[] arr = new int[n];
		int sum = 0;
		for(int i =  0 ; i < arr.length; i++) {
			arr[i] = scn.nextInt();
			sum += arr[i];
		}
		int k = scn.nextInt();
		// if k is equal to 1, then whole array is your answer 
		if(k == 1) {
			System.out.print("[");
			for(int i = 0 ; i  < arr.length; i++) {
				System.out.print(arr[i] + ", ");
			}
			System.out.println("]");
			return;
		}
		//if there are more subsets than no. of elements in array or sum of all elements is not divisible by k
		if(k > n || sum % k != 0) {
			System.out.println("-1");
			return;
		}
		int[] subsetSum = new int[k];
		ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
		for(int i = 0; i < k; i++) {
			ans.add(new ArrayList<>());
		}
		solution(arr,0,n,k,subsetSum,0,ans);
	}
	
	

}
