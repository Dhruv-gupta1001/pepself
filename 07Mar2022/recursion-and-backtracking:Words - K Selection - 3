https://nados.io/question/words-k-selection-3?zen=true

import java.io.*;
import java.util.*;

public class Main {

  
  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String str = br.readLine();
    int k = Integer.parseInt(br.readLine());

    HashMap<Character, Integer> unique = new HashMap<>();
    String ustr = "";
    for (char ch : str.toCharArray()) {
      if (unique.containsKey(ch) == false) {
        unique.put(ch, 1);
        ustr += ch;
      } else {
        unique.put(ch, unique.get(ch) + 1);
      }
    }

    find(0,ustr,unique,k,0,"");
  }

  public static void find(int idx,String ustr,HashMap<Character, Integer> unique,int tsf,int ssf,String asf){
    if(ssf==tsf || idx==ustr.length()){
      if(ssf==tsf){
        System.out.println(asf);
      }
      return;
    }

    char ch=ustr.charAt(idx);
    int f=unique.get(ch);
    int m=Math.min(tsf,f);
    for(int i=m;i>=1;i--){
      String p="";
      for(int y=1;y<=i;y++){
        p=p+ch;
      }

      find(idx+1,ustr,unique,tsf,ssf+i,asf+p);
    }
    find(idx+1,ustr,unique,tsf,ssf,asf);
  }
  
  //Approach 2
  if(ssf==tsf || idx==ustr.length()){
      if(ssf==tsf){
        System.out.println(asf);
      }
      return;
    }

    char ch=ustr.charAt(idx);
    int f=unique.get(ch);
    int m=Math.min(tsf,f);
    // for(int i=m;i>=1;i--){
    //   String p="";
    //   for(int y=1;y<=i;y++){
    //     p=p+ch;
    //   }

    //   find(idx+1,ustr,unique,tsf,ssf+i,asf+p);
    // }
    // find(idx+1,ustr,unique,tsf,ssf,asf);

    if(f>0){
      unique.put(ch,f-1);
      find(idx,ustr,unique,tsf,ssf+1,asf+ch);
      unique.put(ch,f);
    }
    find(idx+1,ustr,unique,tsf,ssf,asf);

}
