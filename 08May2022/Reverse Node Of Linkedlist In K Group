import java.util.*;

class Main {
    public static Scanner scn = new Scanner(System.in);

    public static class ListNode {
        int val = 0;
        ListNode next = null;

        ListNode(int val) {
            this.val = val;
        }
    }

    // static ListNode ot=null;
    // static ListNode oh=null;

    // public static void reverse(ListNode head,ListNode tail){
    //     ListNode prev=head;
    //     ListNode curr=prev.next;
    //     while(curr!=tail){
    //         ListNode temp=curr.next;
    //         curr.next=prev;
    //         prev=curr;
    //         curr=temp;
    //     }
    //     // head.next=tail.next;
    //     // curr.next=prev;
    //     curr.next=prev;

    //     if(oh==null){
    //         oh=curr;
    //         ot=head;
    //     }else{
    //         ot.next=curr;
    //         ot=head;
    //     }
    // }


    static ListNode tt=null;
    static ListNode th=null;

    public static int length(ListNode node){
        ListNode curr=node;
        int c=0;
        while(curr!=null){
            curr=curr.next;
            c++;
        }
        return c; 
    }
        
    
    public static void addFirst(ListNode node){
        if(th==null){
            th=node;
            tt=node;
            th.next=null;
        }else{
            node.next=th;
            th=node;
        }
    }
    public static ListNode reverseInKGroup(ListNode head, int k) {

        // ListNode s=head;
        // ListNode t=head;

        // while(t!=null){
        //     for(int i=1;i<k;i++){
        //         t=t.next;
        //     }
            
        //     if(t!=null){
        //         reverse(s,t);
        //     }
        //     s=t.next;
        //     t=t.next;
        // }

        // if(t==null){
        //     ot.next=s;
        // }

        // return oh;
        
         if(head==null|| head.next==null ||k==1 || k==0){
            return head;
        }
        
        int l=length(head);
        
        ListNode ot=null;
        ListNode oh=null;
        ListNode curr=head;
        while(l>=k){
            for(int i=0;i<k;i++){
               ListNode fr=curr.next;
               curr.next=null;
               addFirst(curr);
               curr=fr;
            }
            if(oh==null){
                oh=th;
                ot=tt;
            }else{
                ot.next=th;
                ot=tt;
            }
            th=null;
            tt=null;
            l-=k;
        }
        
        ot.next=curr;
        return oh;
    }

    public static void printList(ListNode node) {
        while (node != null) {
            System.out.print(node.val + " ");
            node = node.next;
        }
    }

    public static ListNode createList(int n) {
        ListNode dummy = new ListNode(-1);
        ListNode prev = dummy;
        while (n-- > 0) {
            prev.next = new ListNode(scn.nextInt());
            prev = prev.next;
        }

        return dummy.next;
    }

    public static void main(String[] args) {
        int n = scn.nextInt();
        ListNode h1 = createList(n);

        int k = scn.nextInt();
        h1 = reverseInKGroup(h1, k);
        printList(h1);
    }
}
