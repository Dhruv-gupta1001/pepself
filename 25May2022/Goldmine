int[][] dp=new int[n][m];
        for(int j=m-1;j>=0;j--){
            for(int i=n-1;i>=0;i--){
                if(j==m-1){
                    dp[i][j]=arr[i][j];
                }
                // else{
                //     int max=Integer.MIN_VALUE;
                //     for(int k=-1;k>=1 && k+i<dp[0].length && k+i>=0;k++){
                //         if(max<dp[i+k][j+1]){
                //             max=dp[i+k][j+1];
                //         }
                //     }
                //     dp[i][j]=max+arr[i][j];
                // }
                else if(i==0){
                    dp[i][j]=Math.max(dp[i][j+1],dp[i+1][j+1])+arr[i][j];
                }
                else if(i==n-1){
                    dp[i][j]=Math.max(dp[i-1][j+1],dp[i][j+1])+arr[i][j];
                }else{
                    int max=Math.max(Math.max(dp[i-1][j+1],dp[i][j+1]),dp[i+1][j+1]);
                    dp[i][j]=max+arr[i][j];
                }
            }
        }

        int max=Integer.MIN_VALUE;
        for(int i=0;i<dp.length;i++){
            if(max<dp[i][0]){
                max=dp[i][0];
            }
        }

        return max;
