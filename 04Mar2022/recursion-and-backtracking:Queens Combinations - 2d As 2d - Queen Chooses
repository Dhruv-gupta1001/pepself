https://nados.io/question/queens-combinations-2d-as-2d-queen-chooses?zen=true

import java.io.*;
import java.util.*;

public class Main {

    public static void queensCombinations(int qpsf, int tq, boolean[][] chess, int i, int j){
        // write your code here
        if(qpsf==tq){
            for(int r=0;r<tq;r++){
                for(int c=0;c<tq;c++){
                    if(chess[r][c]){
                        System.out.print("q"+"\t");
                    }else{
                        System.out.print('-'+"\t");
                    }
                }
                System.out.println();
            }
            System.out.println();
            return;
        }
        
        int c=j;
        for(c=j+1;c<tq;c++){
            chess[i][c]=true;
            queensCombinations(qpsf+1,tq,chess,i,c);
            chess[i][c]=false;
        }
        // if(c==tq && i+1!=tq){
        //     chess[i+1][0]=true;
        //     queensCombinations(qpsf+1,tq,chess,i+1,0);
        //     chess[i+1][0]=false;
        // }

        for(int r=i+1;r<tq;r++){
            for(c=0;c<tq;c++){
                chess[r][c]=true;
                queensCombinations(qpsf+1,tq,chess,r,c);
                chess[r][c]=false;
            }
        }

    }
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        boolean[][] chess = new boolean[n][n];
        
        queensCombinations(0, n, chess, 0, -1);
    }
}
