https://nados.io/question/queens-permutations-2d-as-2d-box-chooses?zen=true

import java.io.*;
import java.util.*;

public class Main {

    public static void queensPermutations(int qpsf, int tq, int row, int col, String asf, boolean[] queens) {
        // write your code here
        if(row==tq){
            if(qpsf==tq){
                // int idx=0;
                // for(int r=0;r<tq;r++){
                //     for(int c=0;c<tq;c++){
                //         char ch= asf.charAt(idx++);
                //         if(ch!='-'){
                //             System.out.print("q"+ch+"\t");
                //         }else{
                //             System.out.print(ch+"\t");
                //         }
                //     }
                //     System.out.println();
                // }
                // System.out.println();
                // System.out.println();
                System.out.println(asf);
                System.out.println();
            }
            return;
        }

        if(col==tq-1){
            for(int i=0;i<tq;i++){
                if(!queens[i]){
                    queens[i]=true;
                    queensPermutations(qpsf+1,tq,row+1,0,asf+"q"+(i+1)+"\n",queens);
                    queens[i]=false;
                }
            }
            queensPermutations(qpsf,tq,row+1,0,asf+"-"+"\n",queens);
        }else{
            for(int i=0;i<tq;i++){
                if(!queens[i]){
                    queens[i]=true;
                    queensPermutations(qpsf+1,tq,row,col+1,asf+"q"+(i+1)+"\t",queens);
                    queens[i]=false;
                }
            }
            queensPermutations(qpsf,tq,row,col+1,asf+"-"+"\t",queens);
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        boolean[] queens = new boolean[n];

        queensPermutations(0, n, 0, 0, "", queens);
    }
}
