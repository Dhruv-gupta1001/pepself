https://www.pepcoding.com/resources/online-java-foundation/binary-tree/print-nodes-k-away-binary-tree-official/ojquestion

public static void printKNodesFar(Node node, int data, int k) {
    // write your code here
    
    ArrayList<Node> a= nodeToRootPath(node,data);
    for(int i=0;i<a.size();i++){
        printKLevelsDown(a.get(i),k-i,i==0?null:a.get(i-1)); 
    }
    
  }

  
  
  public static void printKLevelsDown(Node node, int k,Node blocker){
    // write your code here
   
   if(node==null || k<0 || node==blocker){
       return;
   }
   
   if(k==0){
       System.out.println(node.data);
   }
   printKLevelsDown(node.left,k-1,blocker);
   printKLevelsDown(node.right,k-1,blocker);
   
   
    
  }
  
  public static ArrayList<Node> nodeToRootPath(Node node, int data){
    
    ArrayList<Node> b=new ArrayList<>();
    
    if(node.data==data){
        b= new ArrayList<>();
        b.add(node);
        return b;
    }
    
    if(node.left!=null){
        b= nodeToRootPath(node.left,data);
        if(b.size()!=0){
            b.add(node);
            return b;
        }
        
    }
    
    if(node.right!=null){
        b= nodeToRootPath(node.right,data);
        if(b.size()!=0){
            ArrayList<Integer> a=new ArrayList<>();
            b.add(node);
            return b;
        }
    }
    
    return b;
    
  }
