
https://www.pepcoding.com/resources/online-java-foundation/graphs/perfect-friends-official/ojquestion
import java.io.*;
import java.util.*;

public class Main {
    
    static class Edge {
    int src;
    int nbr;

    Edge(int src, int nbr) {
      this.src = src;
      this.nbr = nbr;
    }
  }
  
  static class Pair{
      int idx;
      int ele;
      
      Pair(int idx,int ele){
          this.idx=idx;
          this.ele=ele;
      }
  }
   

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int n = Integer.parseInt(br.readLine());
      int k = Integer.parseInt(br.readLine());
      
      // write your code here
      int vtces = n;
    ArrayList< Edge>[] graph = new ArrayList[vtces];
    for (int i = 0; i < vtces; i++) {
      graph[i] = new ArrayList< >();
    }

    int edges = k;
    for (int i = 0; i < edges; i++) {
      String[] parts = br.readLine().split(" ");
      int v1 = Integer.parseInt(parts[0]);
      int v2 = Integer.parseInt(parts[1]);
      graph[v1].add(new Edge(v1, v2));
      graph[v2].add(new Edge(v2, v1));
    }
    
    ArrayList<Pair> comps= new ArrayList<>();
   boolean[] visited= new boolean[vtces];
   
   for(int i=0;i<graph.length;i++){
       if(!visited[i]){
           Pair p=new Pair(i,0);
           dfs(graph,visited,i,p);
           comps.add(p);
       }
   }
    int sum=0;
    for(int i=0;i<comps.size();i++){
        for(int j=i+1;j<comps.size();j++){
            sum+= comps.get(i).ele * comps.get(j).ele;
        }
    }
    System.out.print(sum);
   }
   
   public static void dfs(ArrayList<Edge>[] graph,boolean[] visited,int src,Pair p){
        visited[src]=true;
        p.ele++;
        for(Edge e:graph[src]){
            if(!visited[e.nbr]){
                dfs(graph,visited,e.nbr,p);
            }
        }
    }
}

    
    
    
    
    
    
    
    
