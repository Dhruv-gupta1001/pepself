
https://nados.io/question/cryptarithmetic?zen=true

public static void solution(String unique, int idx, 
							  HashMap<Character, Integer> charIntMap, boolean[] usedNumbers, 
							  String s1, String s2, String s3) {
	    // write your code here

      if(idx==unique.length()){
        int n1=getNum(s1,charIntMap);
        int n2=getNum(s2,charIntMap);
        int n3=getNum(s3,charIntMap);

        if(n1+n2==n3){
          for(int i=0;i<26;i++){
            char ch=(char)('a'+i);
            if(charIntMap.containsKey(ch)){
              System.out.print(ch+"-"+charIntMap.get(ch)+" ");
            }
          }
          System.out.println();
        }
        return;
      }


      for(int i=0;i<=9;i++){
        if(!usedNumbers[i]){
          charIntMap.put(unique.charAt(idx),i);
          usedNumbers[i]=true;
          solution(unique,idx+1,charIntMap,usedNumbers,s1,s2,s3);
          usedNumbers[i]=false;
          charIntMap.put(unique.charAt(idx),-1);
        }
      }
  }

  public static int getNum(String s,HashMap<Character, Integer> charIntMap){
    String num="";

    for(int i=0;i<s.length();i++){
      char ch= s.charAt(i);
      num+=charIntMap.get(ch)+"";
    }

    return Integer.parseInt(num);
  }
