https://leetcode.com/problems/word-search/

class Solution {
    public boolean exist(char[][] board, String word) {
        boolean[][] visited =new boolean[board.length][board[0].length];
        boolean result= false;
        
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]==word.charAt(0)){
                    if(check(board,visited,word,i,j,0)){
                        result=true;
                    }
                    
                }
            }
        }
        return result;
    }
    
    public boolean check(char[][] board,boolean[][] visited,String word,int r,int c,int idx){
        if(idx>=word.length()){
            return true;
        }
        if(r<0 || r>=board.length || c<0 || c>=board[0].length || visited[r][c]==true ||word.charAt(idx)!=board[r][c]){
            return false;
        }
        
        
        visited[r][c]=true;
        boolean x=check(board,visited,word,r-1,c,idx+1);
        boolean y=check(board,visited,word,r,c+1,idx+1);
        boolean z=check(board,visited,word,r+1,c,idx+1);
        boolean d=check(board,visited,word,r,c-1,idx+1);
        visited[r][c]=false;
        
        return x||y||z||d;
    }
}
