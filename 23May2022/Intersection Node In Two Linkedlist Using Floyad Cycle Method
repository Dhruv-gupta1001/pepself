public static ListNode firstNodeofCycle(ListNode h){
        ListNode s=h;
        ListNode f=h;
        while(f!=null && f.next!=null){
            s=s.next;
            f=f.next.next;
            if(s==f){
                break;
            }
        }

        if(s!=f){
            return null;
        }
        
        s=h;
        if(s==f){
            return s;
        }else{
            while(s!=f){
                s=s.next;
                f=f.next;
            }
        }
        return s;

    }

    public static ListNode IntersectionNodeInTwoLL(ListNode headA, ListNode headB) {

        if(headA==null || headB==null){
            return null;
        }

        ListNode tail=headA;
        while(tail.next!=null){
            tail=tail.next;
        }

        tail.next=headB;

        ListNode ans=firstNodeofCycle(headA);

        return ans;
    }
